{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["FeedbackOptions","this","props","options","onLeaveFeedback","map","mood","onClick","Component","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","state","addFeedback","option","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEMA,E,4JAGF,WACI,MAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OACI,6BACKD,EAAQE,KAAI,SAAAC,GAAI,OACb,6BACI,yBAAQC,QAAS,kBAAMH,EAAgBE,IAAvC,UACKA,EAAM,QAFNA,Y,GARCE,aAkBfR,IClBTS,E,4JAGF,WACI,MAA0DR,KAAKC,MAAvDQ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACI,gCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAqB,c,GAXnCN,aAgBVC,IChBTM,E,4JAGF,WACI,IAAQC,EAAUf,KAAKC,MAAfc,MACAC,EAAahB,KAAKC,MAAlBe,SACR,OACI,gCACI,6BAAKD,IACJC,S,GATKT,aAcPO,ICdTG,E,4JAEF,WACI,IAAQC,EAAYlB,KAAKC,MAAjBiB,QACR,OAAO,4BAAIA,Q,GAJQX,aAOZU,ICFTf,EAAU,CAAC,OAAQ,UAAW,OAEfiB,E,4MACjBC,MAAQ,CACJX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETU,YAAc,SAAAC,GACV,EAAKC,UAAS,SAAAC,GAAS,sBAClBF,EAASE,EAAUF,GAAU,O,EAGtCG,mBAAqB,WACjB,MAA+B,EAAKL,MACpC,OADA,EAAQX,KAAR,EAAcC,QAAd,EAAuBC,K,EAG3Be,gCAAkC,WAC9B,IAAQjB,EAAS,EAAKW,MAAdX,KACR,OAAOkB,KAAKC,MAAOnB,EAAO,EAAKgB,qBAAwB,M,4CAG3D,WACI,IAAMb,EAAQZ,KAAKyB,qBACbZ,EAAqBb,KAAK0B,kCAChC,OACI,sBAAKG,UAAU,MAAf,UACI,cAAC,EAAD,CAASd,MAAM,wBAAf,SACI,cAAC,EAAD,CACIb,QAASA,EACTC,gBAAiBH,KAAKqB,gBAG9B,cAAC,EAAD,CAASN,MAAM,aAAf,SACKH,EACG,cAAC,EAAD,CACIH,KAAMT,KAAKoB,MAAMX,KACjBC,QAASV,KAAKoB,MAAMV,QACpBC,IAAKX,KAAKoB,MAAMT,IAChBC,MAAOA,EACPC,mBAAoBA,IAGxB,cAAC,EAAD,CAAcK,QAAQ,kC,GAzCbX,aCJjCuB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.e919c8f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass FeedbackOptions extends Component {\n    static propTypes = {};\n\n    render() {\n        const { options, onLeaveFeedback } = this.props;\n        return (\n            <ul>\n                {options.map(mood => (\n                    <li key={mood}>\n                        <button onClick={() => onLeaveFeedback(mood)}>\n                            {mood}{' '}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\n\nclass Statistics extends Component {\n    static propTypes = {};\n\n    render() {\n        const { good, neutral, bad, total, positivePercentage } = this.props;\n        return (\n            <div>\n                <p>Good: {good}</p>\n                <p>Neutral: {neutral}</p>\n                <p>Bad: {bad}</p>\n                <p>Total: {total}</p>\n                <p>Positive feedback: {positivePercentage + '%'}</p>\n            </div>\n        );\n    }\n}\nexport default Statistics;\n","import React, { Component } from 'react';\n\nclass Section extends Component {\n    static propTypes = {};\n\n    render() {\n        const { title } = this.props;\n        const { children } = this.props;\n        return (\n            <div>\n                <h2>{title}</h2>\n                {children}\n            </div>\n        );\n    }\n}\nexport default Section;\n","import React, { Component } from 'react';\n\nclass Notification extends Component {\n    static propTypes = {};\n    render() {\n        const { message } = this.props;\n        return <p>{message}</p>;\n    }\n}\nexport default Notification;\n","import { Component } from 'react';\nimport './App.css';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification/Notification';\n\nconst options = ['good', 'neutral', 'bad'];\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n    addFeedback = option => {\n        this.setState(prevState => ({\n            [option]: prevState[option] + 1,\n        }));\n    };\n    countTotalFeedback = () => {\n        const { good, neutral, bad } = this.state;\n        return good + neutral + bad;\n    };\n    countPositiveFeedbackPercentage = () => {\n        const { good } = this.state;\n        return Math.round((good / this.countTotalFeedback()) * 100);\n    };\n\n    render() {\n        const total = this.countTotalFeedback();\n        const positivePercentage = this.countPositiveFeedbackPercentage();\n        return (\n            <div className=\"App\">\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions\n                        options={options}\n                        onLeaveFeedback={this.addFeedback}\n                    />\n                </Section>\n                <Section title=\"Statistics\">\n                    {total ? (\n                        <Statistics\n                            good={this.state.good}\n                            neutral={this.state.neutral}\n                            bad={this.state.bad}\n                            total={total}\n                            positivePercentage={positivePercentage}\n                        />\n                    ) : (\n                        <Notification message=\"There is no feedback\" />\n                    )}\n                </Section>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}